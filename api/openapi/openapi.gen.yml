openapi: 3.0.0
info:
  version: 0.1.0
  title: Raybot API
  description: The Raybot API
  license:
    url: https://opensource.org/licenses/MIT
    name: MIT
servers:
  - url: /api/v1
security: []
paths:
  /configs/log:
    get:
      summary: Get the log configuration
      operationId: getLogConfig
      description: Get the log configuration
      tags:
        - config
      responses:
        '200':
          description: The log configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update the log configuration
      operationId: updateLogConfig
      description: Update the log configuration
      tags:
        - config
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogConfig'
      responses:
        '200':
          description: The updated log configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /configs/hardware:
    get:
      summary: Get the hardware configuration
      operationId: getHardwareConfig
      description: Get the hardware configuration
      tags:
        - config
      responses:
        '200':
          description: The hardware configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update the hardware configuration
      operationId: updateHardwareConfig
      description: Update the hardware configuration
      tags:
        - config
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HardwareConfig'
      responses:
        '200':
          description: The updated hardware configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HardwareConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /configs/cloud:
    get:
      summary: Get the cloud configuration
      operationId: getCloudConfig
      description: Get the cloud configuration
      tags:
        - config
      responses:
        '200':
          description: The cloud configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update the cloud configuration
      operationId: updateCloudConfig
      description: Update the cloud configuration
      tags:
        - config
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloudConfig'
      responses:
        '200':
          description: The updated cloud configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CloudConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /configs/grpc:
    get:
      summary: Get the gRPC configuration
      operationId: getGRPCConfig
      description: Get the gRPC configuration
      tags:
        - config
      responses:
        '200':
          description: The gRPC configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GRPCConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update the gRPC configuration
      operationId: updateGRPCConfig
      description: Update the gRPC configuration
      tags:
        - config
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GRPCConfig'
      responses:
        '200':
          description: The updated gRPC configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GRPCConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /configs/http:
    get:
      summary: Get the HTTP configuration
      operationId: getHTTPConfig
      description: Get the HTTP configuration
      tags:
        - config
      responses:
        '200':
          description: The HTTP configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update the HTTP configuration
      operationId: updateHTTPConfig
      description: Update the HTTP configuration
      tags:
        - config
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HTTPConfig'
      responses:
        '200':
          description: The updated HTTP configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPConfig'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /system/restart:
    post:
      summary: Restart the application
      operationId: restartApplication
      description: Restart the application after 3 seconds.
      tags:
        - system
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    LogConfig:
      type: object
      properties:
        level:
          type: string
          enum:
            - DEBUG
            - INFO
            - WARN
            - ERROR
          example: DEBUG
          description: The global log level for the application
          x-order: 1
          x-go-type: string
        format:
          type: string
          enum:
            - JSON
            - TEXT
          example: JSON
          description: The log format for the application
          x-order: 2
          x-go-type: string
        addSource:
          type: boolean
          example: false
          description: Whether to add the source to the log
          x-order: 3
      required:
        - level
        - format
        - addSource
    FieldError:
      type: object
      properties:
        field:
          type: string
          description: field name
          example: name
          x-order: 1
        message:
          type: string
          description: error message
          example: Name is required
          x-order: 2
      required:
        - field
        - message
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          description: custom raybot error code
          example: item.NotFound
          x-order: 1
        message:
          type: string
          description: custom raybot error message
          example: Item not found
          x-order: 2
        details:
          type: array
          items:
            $ref: '#/components/schemas/FieldError'
          x-order: 3
      required:
        - code
        - message
    SerialConfig:
      type: object
      properties:
        port:
          type: string
          example: /dev/ttyUSB0
          description: The port name for the serial connection
          x-order: 1
        baudRate:
          type: integer
          example: 9600
          description: The baud rate for the serial connection
          x-order: 2
        dataBits:
          type: integer
          example: 8
          description: The data bits for the serial connection
          x-order: 3
        stopBits:
          type: number
          format: double
          example: 1
          description: The stop bits for the serial connection
          x-order: 4
          x-go-type: float64
        parity:
          type: string
          enum:
            - NONE
            - EVEN
            - ODD
          example: NONE
          description: The parity for the serial connection
          x-order: 5
          x-go-type: string
        readTimeout:
          type: number
          example: 1
          description: The read timeout for the serial connection in seconds
          x-order: 6
          minimum: 0
          x-go-type: int
      required:
        - port
        - baudRate
        - dataBits
        - stopBits
        - parity
        - readTimeout
    ESPConfig:
      type: object
      properties:
        serial:
          $ref: '#/components/schemas/SerialConfig'
      required:
        - serial
    PICConfig:
      type: object
      properties:
        serial:
          $ref: '#/components/schemas/SerialConfig'
      required:
        - serial
    HardwareConfig:
      type: object
      properties:
        esp:
          $ref: '#/components/schemas/ESPConfig'
        pic:
          $ref: '#/components/schemas/PICConfig'
      required:
        - esp
        - pic
    CloudConfig:
      type: object
      properties:
        address:
          type: string
          example: localhost:50051
          description: The address for the cloud service
          x-order: 1
        token:
          type: string
          example: 4d24e88b41374b34a54806c0124b4052
          description: The token for the cloud service
          x-order: 2
      required:
        - address
        - token
    GRPCConfig:
      type: object
      properties:
        port:
          type: integer
          example: 50051
          description: The port for the gRPC server
          x-order: 1
        enable:
          type: boolean
          example: true
          description: Whether to enable the gRPC server
          x-order: 2
      required:
        - port
        - enable
    HTTPConfig:
      type: object
      properties:
        port:
          type: integer
          example: 8000
          description: The port for the HTTP server
          x-order: 1
        swagger:
          type: boolean
          example: true
          description: Whether to enable the Swagger UI
          x-order: 2
      required:
        - port
        - swagger
