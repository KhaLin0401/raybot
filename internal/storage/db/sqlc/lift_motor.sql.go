// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: lift_motor.sql

package sqlc

import (
	"context"
)

const liftMotorGet = `-- name: LiftMotorGet :one
SELECT id, current_position, target_position, is_running, enabled, updated_at FROM lift_motor
`

func (q *Queries) LiftMotorGet(ctx context.Context, db DBTX) (LiftMotor, error) {
	row := db.QueryRowContext(ctx, liftMotorGet)
	var i LiftMotor
	err := row.Scan(
		&i.ID,
		&i.CurrentPosition,
		&i.TargetPosition,
		&i.IsRunning,
		&i.Enabled,
		&i.UpdatedAt,
	)
	return i, err
}

const liftMotorUpdate = `-- name: LiftMotorUpdate :exec
UPDATE lift_motor
SET
	current_position = ?,
	target_position = ?,
	is_running = ?,
	enabled = ?,
	updated_at = ?
WHERE id = 1
`

type LiftMotorUpdateParams struct {
	CurrentPosition int64  `json:"current_position"`
	TargetPosition  int64  `json:"target_position"`
	IsRunning       int64  `json:"is_running"`
	Enabled         int64  `json:"enabled"`
	UpdatedAt       string `json:"updated_at"`
}

func (q *Queries) LiftMotorUpdate(ctx context.Context, db DBTX, arg LiftMotorUpdateParams) error {
	_, err := db.ExecContext(ctx, liftMotorUpdate,
		arg.CurrentPosition,
		arg.TargetPosition,
		arg.IsRunning,
		arg.Enabled,
		arg.UpdatedAt,
	)
	return err
}
