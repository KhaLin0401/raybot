// Code generated by mockery v2.53.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	model "github.com/tbe-team/raybot/internal/model"
)

// FakePICSerialCommandRepository is an autogenerated mock type for the PICSerialCommandRepository type
type FakePICSerialCommandRepository struct {
	mock.Mock
}

type FakePICSerialCommandRepository_Expecter struct {
	mock *mock.Mock
}

func (_m *FakePICSerialCommandRepository) EXPECT() *FakePICSerialCommandRepository_Expecter {
	return &FakePICSerialCommandRepository_Expecter{mock: &_m.Mock}
}

// CreatePICSerialCommand provides a mock function with given fields: ctx, command
func (_m *FakePICSerialCommandRepository) CreatePICSerialCommand(ctx context.Context, command model.PICSerialCommand) error {
	ret := _m.Called(ctx, command)

	if len(ret) == 0 {
		panic("no return value specified for CreatePICSerialCommand")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.PICSerialCommand) error); ok {
		r0 = rf(ctx, command)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FakePICSerialCommandRepository_CreatePICSerialCommand_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreatePICSerialCommand'
type FakePICSerialCommandRepository_CreatePICSerialCommand_Call struct {
	*mock.Call
}

// CreatePICSerialCommand is a helper method to define mock.On call
//   - ctx context.Context
//   - command model.PICSerialCommand
func (_e *FakePICSerialCommandRepository_Expecter) CreatePICSerialCommand(ctx interface{}, command interface{}) *FakePICSerialCommandRepository_CreatePICSerialCommand_Call {
	return &FakePICSerialCommandRepository_CreatePICSerialCommand_Call{Call: _e.mock.On("CreatePICSerialCommand", ctx, command)}
}

func (_c *FakePICSerialCommandRepository_CreatePICSerialCommand_Call) Run(run func(ctx context.Context, command model.PICSerialCommand)) *FakePICSerialCommandRepository_CreatePICSerialCommand_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(model.PICSerialCommand))
	})
	return _c
}

func (_c *FakePICSerialCommandRepository_CreatePICSerialCommand_Call) Return(_a0 error) *FakePICSerialCommandRepository_CreatePICSerialCommand_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FakePICSerialCommandRepository_CreatePICSerialCommand_Call) RunAndReturn(run func(context.Context, model.PICSerialCommand) error) *FakePICSerialCommandRepository_CreatePICSerialCommand_Call {
	_c.Call.Return(run)
	return _c
}

// DeletePICSerialCommand provides a mock function with given fields: ctx, id
func (_m *FakePICSerialCommandRepository) DeletePICSerialCommand(ctx context.Context, id string) error {
	ret := _m.Called(ctx, id)

	if len(ret) == 0 {
		panic("no return value specified for DeletePICSerialCommand")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FakePICSerialCommandRepository_DeletePICSerialCommand_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeletePICSerialCommand'
type FakePICSerialCommandRepository_DeletePICSerialCommand_Call struct {
	*mock.Call
}

// DeletePICSerialCommand is a helper method to define mock.On call
//   - ctx context.Context
//   - id string
func (_e *FakePICSerialCommandRepository_Expecter) DeletePICSerialCommand(ctx interface{}, id interface{}) *FakePICSerialCommandRepository_DeletePICSerialCommand_Call {
	return &FakePICSerialCommandRepository_DeletePICSerialCommand_Call{Call: _e.mock.On("DeletePICSerialCommand", ctx, id)}
}

func (_c *FakePICSerialCommandRepository_DeletePICSerialCommand_Call) Run(run func(ctx context.Context, id string)) *FakePICSerialCommandRepository_DeletePICSerialCommand_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *FakePICSerialCommandRepository_DeletePICSerialCommand_Call) Return(_a0 error) *FakePICSerialCommandRepository_DeletePICSerialCommand_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *FakePICSerialCommandRepository_DeletePICSerialCommand_Call) RunAndReturn(run func(context.Context, string) error) *FakePICSerialCommandRepository_DeletePICSerialCommand_Call {
	_c.Call.Return(run)
	return _c
}

// GetPICSerialCommand provides a mock function with given fields: ctx, id
func (_m *FakePICSerialCommandRepository) GetPICSerialCommand(ctx context.Context, id string) (model.PICSerialCommand, error) {
	ret := _m.Called(ctx, id)

	if len(ret) == 0 {
		panic("no return value specified for GetPICSerialCommand")
	}

	var r0 model.PICSerialCommand
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (model.PICSerialCommand, error)); ok {
		return rf(ctx, id)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) model.PICSerialCommand); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(model.PICSerialCommand)
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FakePICSerialCommandRepository_GetPICSerialCommand_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPICSerialCommand'
type FakePICSerialCommandRepository_GetPICSerialCommand_Call struct {
	*mock.Call
}

// GetPICSerialCommand is a helper method to define mock.On call
//   - ctx context.Context
//   - id string
func (_e *FakePICSerialCommandRepository_Expecter) GetPICSerialCommand(ctx interface{}, id interface{}) *FakePICSerialCommandRepository_GetPICSerialCommand_Call {
	return &FakePICSerialCommandRepository_GetPICSerialCommand_Call{Call: _e.mock.On("GetPICSerialCommand", ctx, id)}
}

func (_c *FakePICSerialCommandRepository_GetPICSerialCommand_Call) Run(run func(ctx context.Context, id string)) *FakePICSerialCommandRepository_GetPICSerialCommand_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *FakePICSerialCommandRepository_GetPICSerialCommand_Call) Return(_a0 model.PICSerialCommand, _a1 error) *FakePICSerialCommandRepository_GetPICSerialCommand_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *FakePICSerialCommandRepository_GetPICSerialCommand_Call) RunAndReturn(run func(context.Context, string) (model.PICSerialCommand, error)) *FakePICSerialCommandRepository_GetPICSerialCommand_Call {
	_c.Call.Return(run)
	return _c
}

// NewFakePICSerialCommandRepository creates a new instance of FakePICSerialCommandRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFakePICSerialCommandRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *FakePICSerialCommandRepository {
	mock := &FakePICSerialCommandRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
