name: Release

on:
  push:
    tags:
    - 'v*'

permissions:
  contents: write

env:
  GO_VERSION: "1.24.x"

jobs:
  build-ui:
    name: Build UI
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ui
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          cache-dependency-path: ui/pnpm-lock.yaml
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build UI
        run: pnpm run build
      - name: Upload UI build
        uses: actions/upload-artifact@v4
        with:
          name: ui-dist
          path: ui/dist

  build-linux-amd64:
    name: Build for Linux amd64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download UI build
        uses: actions/download-artifact@v4
        with:
          name: ui-dist
          path: ui/dist
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build
        env:
          CGO_ENABLED: 1
          GOOS: linux
          GOARCH: amd64
        run: go build -o raybot cmd/raybot/main.go
      - name: Package binary
        run: |
          tar -czf raybot-linux-amd64.tar.gz raybot
      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-linux-amd64
          path: raybot-linux-amd64.tar.gz

  build-linux-arm64:
    name: Build for Linux arm64
    runs-on: ubuntu-latest
    steps:
      - name: Install build dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y gcc-aarch64-linux-gnu
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download UI build
        uses: actions/download-artifact@v4
        with:
          name: ui-dist
          path: ui/dist
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build
        env:
          CGO_ENABLED: 1
          GOOS: linux
          GOARCH: arm64
          CC: aarch64-linux-gnu-gcc
        run: go build -o raybot cmd/raybot/main.go
      - name: Package binary
        run: |
          tar -czf raybot-linux-arm64.tar.gz raybot
      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-linux-arm64
          path: raybot-linux-arm64.tar.gz

  build-windows-amd64:
    name: Build for Windows amd64
    runs-on: ubuntu-latest
    steps:
      - name: Install build dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y mingw-w64
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download UI build
        uses: actions/download-artifact@v4
        with:
          name: ui-dist
          path: ui/dist
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Build
        env:
          CGO_ENABLED: 1
          GOOS: windows
          GOARCH: amd64
          CC: x86_64-w64-mingw32-gcc
        run: go build -o raybot.exe cmd/raybot/main.go
      - name: Package binary
        run: |
          zip raybot-windows-amd64.zip raybot.exe
      - name: Archive artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-windows-amd64
          path: raybot-windows-amd64.zip

  release:
    name: Draft Release
    needs:
      - build-linux-amd64
      - build-linux-arm64
      - build-windows-amd64
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
      - name: Get version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Draft Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: ${{ env.VERSION }}
          draft: true
          generate_release_notes: true
          overwrite: true
          files: dist-*/raybot*.*
